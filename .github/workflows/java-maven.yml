name: Build & Test Java Application

on:
  push:
    branches:
      - master
    paths:
      - '**/*.java'
      - 'pom.xml'
      - '.github/workflows/java-maven.yml'
  pull_request:
    branches:
      - master
    paths:
      - '**/*.java'
      - 'pom.xml'
      - '.github/workflows/java-maven.yml'

jobs:
  build:
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: porocar
          POSTGRES_USER: porocar
          POSTGRES_PASSWORD: secret
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U porocar -h localhost -p 5432"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    env:
      MAVEN_OPTS: "-Xmx2g"
      SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/porocar
      SPRING_DATASOURCE_USERNAME: porocar
      SPRING_DATASOURCE_PASSWORD: secret
      TESTCONTAINERS_RYUK_DISABLED: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      - name: Build and Test
        run: |
          ./mvnw clean package --batch-mode --show-version
          ./mvnw test --batch-mode

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-jar-${{ matrix.os }}
          path: target/*.jar